%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 9.0
%%For: (Someone ) (Mira)
%%Title: (aeslogo.eps)
%%CreationDate: 4/7/2004 12:22 PM
%%BoundingBox: 13 16 109 142
%%HiResBoundingBox: 13.4639 16.9473 108.7949 141.2671
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 2 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 62.5 77.5 62.5 77.5
%AI3_TileBox: 18 8 593 784
%AI3_DocumentPreview: PC_TIFF
%AI5_ArtSize: 124 155
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -65 163 3 1002 661 26 0 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:18 8
%%AI3_PaperRect:-18 784 594 -8
%%AI3_Margin:18 -8 -19 8
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 100 128 8
%%BeginData: 9422 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD62F87DFFFD62F87DFFF827A8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A852F87DFFF827FD5EFF52F8
%52FFF827FD09FF5252527DFD0AFFA87D7DA8FD04FF7D7D7DFD09FFFD077D
%A8FD0DFF7D7D7DFD0CFFA8FD047DFD0AFF52F87DFFF827FD08FFA8F8F8F8
%27FD0AFF52F8F827FD04FFF8F8F87DFD08FFFD08F827FD0CFFF8F8F8FD0B
%FF27FD06F87DFD08FF52F852FFF827FD08FF7DFD04F8A8FD09FF52F8F827
%FD04FFF8F8F87DFD08FFFD09F852FD0BFFF8F8F8FD0AFFFD09F852FD07FF
%52F87DFFF827FD08FF27FD04F852FD09FF52F8F8F8FD04FFF8F8F852FD08
%FFF8F8F8527D5227F8F8F87DFD0AFFF8F8F8FD09FF27F8F82752A87D52F8
%F8F87DFD06FF27F852FFF827FD07FFA8FD05F827FD09FF52F8F827FD04FF
%F8F8F87DFD08FFF8F8F8A8FFFFFF52F8F827FD0AFFF8F8F8FD08FFA8F8F8
%F87DFD04FF52F8F827FD06FF52F87DFFF827FD07FF7DF8F82727F8F8A8FD
%08FF52F8F827FD04FFF8F8F852FD08FFF8F8F87DFFFFFF7DF8F8F8A8FD09
%FFF8F8F8FD08FF7DF8F827FD05FF7DF8F8F8A8FD05FF27F87DFFF827FD07
%FF27F8F87D27F8F87DFD08FF52F8F827FD04FFF8F8F87DFD08FFF8F8F8A8
%FFFFFFA8F8F8F87DFD09FFF8F8F8FD08FF52F8F852FD05FFA8F8F8F87DFD
%05FF52F87DFFF827FD07FFF8F827A87DF8F827FD08FF52F8F827FD04FFF8
%F8F852FD08FFF8F8F87DFFFFFF7DF8F8F852FD09FFF8F8F8FD08FF52F8F8
%52FD06FF27F8F852FD05FF52F852FFF827FD06FF7DF8F827FFA827F8F8A8
%FD07FF52F8F827FD04FFF8F8F87DFD08FFF8F8F8A8FFFFFFA8F8F8F87DFD
%09FFF8F8F8FD08FF52F8F852FD06FF27F8F87DFD05FF52F87DFFF827FD06
%FF27F8F8525252F8F8F852FD07FF52F8F8F8FFFFFFA8F8F8F87DFD08FFF8
%F8F87DFFFFFF7DF8F8F8A8FD09FFF8F8F8FD08FF7DF8F827FD05FF7DF8F8
%F852FD05FF52F852FFF827FD06FF27FD08F827FD07FF52F8F8F8A8FFFF7D
%F8F8F87DFD08FFF8F8F8A8FFFFFF52F8F8F8FD0AFFF8F8F8FD08FFA8F8F8
%F87DFD04FF52F8F8F8FD06FF52F87DFFF827FD05FF7DF8F8F827F827FD04
%F8A8FD06FF52F8F8F8275252FD04F8FD09FFF8F8F852A87D7DF8F8F87DFD
%0AFFF8F8F8FD09FF27F8F8277DFFA87DF8F8F852FD06FF27F852FFF827FD
%05FF27F8F852FFFFFFA8F8F8F87DFD06FFA827FD08F852FD09FFFD09F852
%FD0BFFF8F8F8FD0AFF27F8F8272727F8F8F827FD07FF52F87DFFF827FD05
%FF27F8F852FD04FF27F8F827FD07FF7D27FD05F82752FD0AFFFD08F852FD
%0CFFF8F8F8FD0AFFA827FD06F852A8FD07FF27F87DFFF827FD05FF525227
%FD05FF7D525252FD09FFA87D52527DA8FD0BFFFD077DFD0EFF525252FD0C
%FFA87D52527DFD0AFF52F87DFFF827FD28FF7D522727F8272727F8272752
%52FD29FF52F852FFF827FD25FFA852FD0FF8527DFD26FF52F87DFFF827FD
%23FFA827FD14F87DFD24FF52F87DFFF827FD22FF7DFD17F852A8FD22FF52
%F8FFFFF827FD21FF27FD1AF87DFD21FF27F8FFFF27F8A8FD1FFF52FD1CF8
%52FD20FF52F8FFFF27F87DFD1EFF52FD09F852527D5227FD10F87DFD1FFF
%27F8FFFF27F8A8FD1DFFA8FD09F8A8FD05FF7DFD0FF827A8FD1EFF27F8FF
%FF27F87DFD1DFF27FD08F87DFD07FF52FD0FF827FD1EFF2727FFFF52F8A8
%FD1DFF27FD07F827A8FD07FFA827FD0FF8A8FD1DFF2727FFFF52F852FD1C
%FF7DFD08F827FD09FF27FD0FF827FD1DFFF827FFFF52F87DFD1CFF52FD08
%F827FD09FF52FD0FF827FD1CFF7DF827FFFF52F852FD1CFF52FD09F8FD09
%FF52FD10F8FD1CFFA8F852FFFF7DF852FD1CFF52FD08F852FD09FF7DFD10
%F8FD1CFF7DF852FFFF7DF852FD1CFF52FD08F827FD09FF7DFD10F8FD1CFF
%7DF87DFFFFFFF852FD1CFF52FD08F852FD09FF7DFD10F8FD1CFF7DF87DFF
%FFFFF8F8FD1CFF52FD08F852FD09FF52FD10F8FD1CFF52F87DFFFFFF2727
%A8FD1BFF52FD08F852FD09FF7DFD10F8FD1CFF52F8FD04FF27F8A8FD1BFF
%52FD08F852FD09FF52FD10F8FD1CFF27F8FD04FF52F87DFD1BFF52FD08F8
%52FD09FF7DFD10F8FD1CFF2727FD04FF52F87DFD1BFF52FD08F827FD09FF
%52FD10F8FD1BFF7DF8F8FD04FF7DF852FD1BFF52FD08F852FD09FF7DFD10
%F8FD1BFFA8F852FD04FFA8F852FD1BFF52FD08F827FD09FF7DFD10F8FD1B
%FF7DF852FD05FFF827FD1BFF52FD08F852FD09FF7DFD10F8FD1BFF7DF87D
%FD05FFF827A8FD1AFF52FD08F852FD09FF52FD10F8FD1BFF27F87DFD05FF
%52F8A8FD1AFF52FD08F852FD09FF7DFD10F8FD1BFF52F8FD06FF27F87DFD
%1AFF52FD08F852FD09FF52FD10F8FD1BFF2727FD06FF7DF87DFD1AFF52FD
%08F852FD09FF7DFD10F8FD1AFFA8F827FD06FF7DF827FD1AFF52FD08F827
%FD09FF52FD10F8FD1AFF7DF852FD07FFF827FD1AFF52FD08F852FD09FF7D
%FD10F8FD1AFF7DF852FD07FF27F8FD1AFF52FD08F827FD09FF7DFD10F8FD
%1AFF52F87DFD07FF52F87DFD19FF52FD08F852FD09FF7DFD10F8FD1AFF27
%F8FD08FF52F87DFD19FF52FD08F852FD09FF52FD10F8FD19FFA827F8FD08
%FF7DF852FD19FF52FD08F852FD09FF7DFD10F8FD19FFA8F852FD09FFF827
%FD19FF52FD08F852FD09FF52FD10F8FD19FF7DF827FD09FF27F8A8FD18FF
%52FD08F852FD09FF7DFD10F8FD19FF7DF87DFD09FF27F87DFD18FF52FD08
%F827FD09FF52FD10F8FD19FF27F87DFD09FF7DF87DFD18FF52FD08F852FD
%09FF7DFD10F8FD19FF27F8FD0AFFA8F827FD18FF52FD08F827FD09FF7DFD
%10F8FD18FFA8F827FD0BFFF827FD18FF52FD08F852FD09FF7DFD10F8FD18
%FF7DF852FD0BFF52F8A8FD17FF52FD08F852FD09FF52FD10F8FD18FF7DF8
%7DFD0BFF52F87DFD17FF52FD08F852FD09FF7DFD10F8FD18FF27F8A8FD0B
%FFA8F852FD17FF52FD08F827FD09FF52FD10F8FD17FFA827F8FD0DFF2727
%FD17FF52FD08F827FD09FF7DFD10F8FD17FFA8F827FD0DFF27F87DFD16FF
%52FD09F8FD09FF52FD10F8FD17FF52F827FD0DFF7DF87DFD16FF52FD08F8
%27FD09FF7DFD10F8FD17FF52F87DFD0EFFF827FD16FF52FD08F827FD09FF
%7DFD10F8FD17FF27F8FD0FFF2727A8FD15FF52FD08F827FD09FF7DFD10F8
%FD16FF7DF827FD0FFF52F87DFD15FF52FD08F827FD09FF52FD10F8FD16FF
%7DF852FD0FFFA8F827FD15FF52FD08F827FD097D52FD10F8FD16FF52F87D
%FD10FFF827A8FD14FF52FD23F8FD16FF27F8FD11FF52F8A8FD14FF52FD23
%F8FD15FFA8F827FD11FF7DF852FD14FF52FD23F8FD15FF52F827FD12FFF8
%27FD14FF52FD23F8FD15FF52F87DFD12FF52F87DFD13FF52FD09F8FD0927
%FD11F8FD15FFF8F8A8FD12FF7DF852FD13FF52FD08F827FD09FF52FD10F8
%FD14FF7DF827FD14FFF827A8FD12FF52FD08F827FD09FF27FD10F8FD14FF
%7DF852FD14FF52F87DFD12FF52FD08F827FD09FF52FD10F8FD14FF27F87D
%FD14FF7DF827FD12FF52FD08F827FD09FF27FD10F8FD13FFA827F8FD16FF
%F827A8FD11FF52FD08F827FD09FF52FD10F8FD13FF7DF852FD16FF52F87D
%FD11FF52FD09F8FD09FF27FD10F8FD13FF27F852FD16FFA8F827FD11FF52
%FD08F827FD09FF52FD10F8FD12FFA827F8FD18FF27F87DFD10FF52FD08F8
%27FD09FF52FD10F8FD12FF7DF827FD18FFA8F852FD10FF52FD082752FD09
%FF7DFD1027FD12FF27F852FD19FF27F8A8FD44FFA8F8F8FD1AFF52F852FD
%44FF7DF852FD1BFFF827A8FD43FF27F852FD1BFF52F87DFFFFA8FD3CF8A8
%FFFF7DF8F8FD1CFF7DF827FFFFFFFD3BF827FFFFFF52F852FD1DFF27F87D
%FFFF52FD3AF827FFFFFF27F87DFD1DFF7DF852FFFF7DFD3AF87DFFFF7DF8
%F8FD1FFF27F8A8FFFF27FD38F827FFFFFF52F87DFD1FFF7DF827FFFF7DFD
%0FF8FD0B52FD06F852FD05A852FD11F827FFFFA8F8F8A8FD20FFF827A8FF
%FF27FD0EF8A8FD0AFF7DF8F8F827A8FFFFA8A8FFFFFFA827FD0FF8A8FFFF
%52F827FD21FF52F852FFFF52FD0EF8A8FFFD097D27F8F8F87DFF7D27F8F8
%F8277DFFA8FD0EF827FFFFA827F8A8FD22FF27F8A8FFFFFD0EF8A8FFFD0D
%F8FFA8FD07F8A8FF52FD0DF87DFFFF7DF852FD23FF52F852FFFF52FD0DF8
%A8FFFD0DF8FFA8FD07F852FF7DFD0DF8FFFFFF27F87DFD24FFF827A8FFFF
%27FD0CF8A8FFFD0DF8FFFF52FD15F87DFFFF7DF827FD25FF52F852FFFF7D
%FD0CF8A8FFFD0DF852FFFFA827FD12F827FFFFA827F87DFD26FF27F8A8FF
%FF27FD0BF8A8FF5252527D5252527D27FD05F852FFFFFFA87D27FD0FF8A8
%FFFF7DF852FD27FF52F827FFFFA8FD0BF8A8FD09FF7DFD07F87D7DFFFFFF
%A87DFD0CF827FFFFA8F8F87DFD28FFF827A8FFFF52FD0AF8A8FF7D7D7DA8
%7D7D7DA852FD0AF87D7DFFFFFF27FD0AF8FFFFFF52F852FD29FF7DF852FF
%FFA827FD09F8A8FFFD16F87DFFFFFD09F852FFFF7DF8F8FD2BFF27F87DFF
%FF52FD09F8A8FFFD0CF852A827FD08F8A8FF52FD07F827FFFFA827F87DFD
%2BFF7DF827FFFFFFFD09F8A8FFFD0CF852FFA8FD08F87DFF52FD07F87DFF
%FF52F827FD2DFF27F87DFFFFA8FD08F8A8FFFD0DF8FFFF52FD07F8A8FF52
%FD06F852FFFFA8F8F87DFD2DFFA8F827A8FFFF52FD07F8A8FFFD0DF852FF
%A852FD05F87DFFA8FD07F8FFFFFF27F827FD2FFF52F852FFFFA827FD06F8
%A8FFFD09A87DFD04F852FFFFA87D7D7DA8FFFF27FD06F8A8FFFF52F8F8FD
%31FF27F87DFFFF7DFD06F8A8FD0AFF7DFD05F827A8A8FFFFFFA87DFD07F8
%7DFFFF7DF8F87DFD31FF7DF8F8A8FFFF52FD05F8527D527D527D527D527D
%5252FD08F8527D52FD08F852FFFFA827F852FD33FF52F827FFFFFF27FD22
%F852FFFFA827F827A8FD34FF27F852FFFFFFFD21F827FFFFFF52F8F87DFD
%35FFA8F8F87DFFFFA8FD1FF827A8FFFF7DF8F852FD37FF7DF827A8FFFF7D
%FD1DF827A8FFFFA8F8F827FD39FF52F827A8FFFF7DFD1BF827A8FFFFA8F8
%F8F8A8FD3AFF27F852FFFFFF52FD19F827A8FFFFFF27F8F8A8FD3BFF7DF8
%F852FFFFFF27FD17F827A8FFFFA8F8F8F8A8FD3DFF7DF8F87DFFFFFF52FD
%15F852FFFFFFA827F8F87DFD3FFF52F8F8A8FFFFFF7DFD13F87DFFFFFFA8
%27F8F87DFD41FF52F8F8A8FFFFFF7DFD10F827A8FFFFFFA827F8F87DFD43
%FF27F8F87DFFFFFFA827FD0DF827FD04FF7DF8F8F87DFD08FF7D5252A8FD
%39FF27F8F87DFD04FF5227FD09F852A8FD04FF7DF8F8F87DFD08FF7D5252
%7D277DFD39FF27F8F852A8FFFFFFA852FD06F827A8FD04FFA852F8F8F8A8
%FD09FF277D5227A827A8FD39FF27F8F8277DFD05FF7D7D527DFD06FF7D27
%F8F8F8FD0AFF7D527D7D7D277D7DFD3AFF52F8F8F852FD0CFF7D27F8F8F8
%27FD0BFF527D5227F8A8527DFD3BFF7D27F8F827527DFD06FFA85252F8F8
%F8277DFD0CFFA8527DFD0452A8FD3CFFA852FD04F8275252522727FD05F8
%52FD0FFF527DFFA87D27FD3FFFA827FD0AF82752FD12FF7D275252FD42FF
%7D5227FD04F827277DFD2DFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M []0 d1 XR
13.5635 141.1675 m
13.5635 136.2368 13.5635 123.5015 v
13.5796 102.1016 19.7236 75.7568 26.2148 60.7861 C
32.312 45.5449 38.7046 36.0068 v
45.0957 26.4688 53.4063 17.0098 61.082 17.0469 c
68.7568 17.084 78.667 25.3799 85.8594 36.1504 c
92.9688 46.7939 95.0322 52.2363 98.0586 60.9795 c
103.1113 75.5762 108.667 103.2769 108.6953 123.5015 c
108.6953 132.3345 108.6953 141.1675 Y
13.5635 141.1675 L
F0 R
0 0 0 1 K
0.199 w 14.3 M0 XR
13.5635 141.1675 m
13.5635 136.2368 13.5635 123.5015 v
13.5796 102.1016 19.7236 75.7568 26.2148 60.7861 C
32.312 45.5449 38.7046 36.0068 v
45.0957 26.4688 53.4063 17.0098 61.082 17.0469 c
68.7568 17.084 78.667 25.3799 85.8594 36.1504 c
92.9688 46.7939 95.0322 52.2363 98.0586 60.9795 c
103.1113 75.5762 108.667 103.2769 108.6953 123.5015 c
108.6953 132.3345 108.6953 141.1675 Y
13.5635 141.1675 L
s0 O
0 0 0 0 k
1 w 4 M1 XR
15.3218 139.2095 m
15.3218 134.4536 15.3218 122.1646 v
15.3379 101.5161 21.2397 76.2832 27.5054 61.8389 C
33.4126 46.9463 39.5791 37.7432 v
45.7461 28.54 53.7646 19.4131 61.1699 19.4492 c
68.5752 19.4863 77.834 28.0439 84.7031 37.8809 c
91.4688 47.5713 92.2197 49.9023 96.4854 61.8389 c
101.0449 74.5869 107.085 102.6504 107.1113 122.1646 c
107.1113 130.687 107.1113 139.2095 Y
15.3218 139.2095 L
F0 R
0 0 0 1 K
0.199 w 14.3 M0 XR
15.3218 139.2095 m
15.3218 134.4536 15.3218 122.1646 v
15.3379 101.5161 21.2397 76.2832 27.5054 61.8389 C
33.4126 46.9463 39.5791 37.7432 v
45.7461 28.54 53.7646 19.4131 61.1699 19.4492 c
68.5752 19.4863 77.834 28.0439 84.7031 37.8809 c
91.4688 47.5713 92.2197 49.9023 96.4854 61.8389 c
101.0449 74.5869 107.085 102.6504 107.1113 122.1646 c
107.1113 130.687 107.1113 139.2095 Y
15.3218 139.2095 L
s0 O
0 0 0 1 k
1 w 4 M1 XR
32.8799 57.6484 m
59.0303 57.6484 62.7183 57.6299 91.2363 57.6299 C
90.3438 52.8184 85.3613 42.6553 79.9824 36.1611 c
71.4053 25.8057 63.9053 22.502 61.0928 22.502 c
58.021 22.502 51.6016 25.9229 44.083 36.1611 c
39.8247 41.96 33.5288 53.5947 32.8799 57.6484 C
F0 R
0 0 0 1 K
0.199 w 14.3 M0 XR
32.8799 57.6484 m
59.0303 57.6484 62.7183 57.6299 91.2363 57.6299 C
90.3438 52.8184 85.3613 42.6553 79.9824 36.1611 c
71.4053 25.8057 63.9053 22.502 61.0928 22.502 c
58.021 22.502 51.6016 25.9229 44.083 36.1611 c
39.8247 41.96 33.5288 53.5947 32.8799 57.6484 C
s0 O
0 0 0 1 k
1 w 4 M1 XR
62.6592 61.1172 m
62.6592 69.8779 L
52.9492 69.8779 L
52.9492 61.1172 L
44.1548 61.1172 L
44.2104 85.1514 44.1548 110.3677 v
44.1548 116.2856 49.8647 122.6797 61.1753 122.5605 C
71.3408 122.5605 78.4238 115.6943 78.4238 109.8936 c
78.3662 85.0322 78.4238 61.1172 Y
62.6592 61.1172 L
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
62.6592 61.1172 m
62.6592 69.8779 L
52.9492 69.8779 L
52.9492 61.1172 L
44.1548 61.1172 L
44.2104 85.1514 44.1548 110.3677 v
44.1548 116.2856 49.8647 122.6797 61.1753 122.5605 C
71.3408 122.5605 78.4238 115.6943 78.4238 109.8936 c
78.3662 85.0322 78.4238 61.1172 Y
62.6592 61.1172 L
s0 O
0 0 0 0 k
1 w 4 M1 XR
62.5444 74.7324 m
53.064 74.7324 L
52.9492 104.9204 53.064 111.9053 v
53.1104 114.7461 54.7773 116.6426 57.6338 116.6426 c
61.1753 116.6426 62.5444 112.7344 62.5444 110.3677 c
62.5444 105.5117 62.5444 74.7324 Y
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
62.5444 74.7324 m
53.064 74.7324 L
52.9492 104.9204 53.064 111.9053 v
53.1104 114.7461 54.7773 116.6426 57.6338 116.6426 c
61.1753 116.6426 62.5444 112.7344 62.5444 110.3677 c
62.5444 105.5117 62.5444 74.7324 Y
s0 O
0 0 0 1 k
1 w 4 M1 XR
24.5068 136.7407 m
27.3618 136.7222 L
31.6777 123.5088 L
28.6631 123.5347 L
27.7739 126.0132 L
23.9351 125.9946 L
23.021 123.5088 L
20.2793 123.5142 L
24.5068 136.7407 L
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
24.5068 136.7407 m
27.3618 136.7222 L
31.6777 123.5088 L
28.6631 123.5347 L
27.7739 126.0132 L
23.9351 125.9946 L
23.021 123.5088 L
20.2793 123.5142 L
24.5068 136.7407 L
s0 O
0 0 0 0 k
1 w 4 M1 XR
27.2471 128.3428 m
25.9907 132.2695 L
24.6196 128.3633 L
27.2471 128.3428 L
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
27.2471 128.3428 m
25.9907 132.2695 L
24.6196 128.3633 L
27.2471 128.3428 L
s0 O
0 0 0 1 k
1 w 4 M1 XR
38.2441 136.6494 m
38.2529 132.7397 38.2529 128.0063 v
38.2529 124.312 40.3843 123.5088 43.583 123.5088 c
46.6675 123.5088 48.4956 125.1763 48.4956 127.6509 c
48.4956 132.6841 48.4956 136.6494 Y
45.6387 136.6494 L
45.6587 132.1504 45.6587 129.7837 v
45.6587 127.772 45.5278 125.8755 43.4683 125.8755 c
41.4092 125.8755 41.2979 127.5322 41.2979 129.5454 c
41.2979 133.8066 41.2979 136.6494 Y
38.2441 136.6494 L
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
38.2441 136.6494 m
38.2529 132.7397 38.2529 128.0063 v
38.2529 124.312 40.3843 123.5088 43.583 123.5088 c
46.6675 123.5088 48.4956 125.1763 48.4956 127.6509 c
48.4956 132.6841 48.4956 136.6494 Y
45.6387 136.6494 L
45.6587 132.1504 45.6587 129.7837 v
45.6587 127.772 45.5278 125.8755 43.4683 125.8755 c
41.4092 125.8755 41.2979 127.5322 41.2979 129.5454 c
41.2979 133.8066 41.2979 136.6494 Y
38.2441 136.6494 L
s0 O
0 0 0 1 k
1 w 4 M1 XR
57.4048 136.6494 m
57.4048 123.6372 L
60.7759 123.6406 62.7739 123.6406 v
65.627 123.6406 68.0293 126.4688 68.0293 129.9009 c
68.0293 133.2158 65.9717 136.646 63.2314 136.646 c
60.29 136.646 57.4048 136.6494 Y
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
57.4048 136.6494 m
57.4048 123.6372 L
60.7759 123.6406 62.7739 123.6406 v
65.627 123.6406 68.0293 126.4688 68.0293 129.9009 c
68.0293 133.2158 65.9717 136.646 63.2314 136.646 c
60.29 136.646 57.4048 136.6494 Y
s0 O
0 0 0 0 k
1 w 4 M1 XR
60.1465 134.1641 m
60.1465 125.8755 L
61.4028 125.8755 62.6592 125.8755 v
63.916 125.8755 64.7061 127.6509 64.8301 129.9009 c
64.9619 132.3047 63.9551 134.1641 61.8994 134.1641 c
61.043 134.1641 60.1465 134.1641 Y
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
60.1465 134.1641 m
60.1465 125.8755 L
61.4028 125.8755 62.6592 125.8755 v
63.916 125.8755 64.7061 127.6509 64.8301 129.9009 c
64.9619 132.3047 63.9551 134.1641 61.8994 134.1641 c
61.043 134.1641 60.1465 134.1641 Y
s0 O
0 0 0 1 k
1 w 4 M1 XR
77.624 123.5088 m
80.3662 123.5088 L
80.3662 136.6494 L
77.624 136.6494 L
77.624 123.5088 L
f0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
77.624 123.5088 m
80.3662 123.5088 L
80.3662 136.6494 L
77.624 136.6494 L
77.624 123.5088 L
s0 O
0 0 0 1 k
1 w 4 M1 XR
94.7344 136.6475 m
98.9375 136.6475 101.1221 133.5132 101.1221 129.9731 c
101.1221 126.2603 98.9932 123.4731 94.96 123.4731 c
90.9258 123.4731 88.8525 126.4331 88.8525 129.9731 c
88.8525 133.5132 90.5332 136.6475 94.7344 136.6475 C
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
94.7344 136.6475 m
98.9375 136.6475 101.1221 133.5132 101.1221 129.9731 c
101.1221 126.2603 98.9932 123.4731 94.96 123.4731 c
90.9258 123.4731 88.8525 126.4331 88.8525 129.9731 c
88.8525 133.5132 90.5332 136.6475 94.7344 136.6475 c
s0 O
0 0 0 0 k
1 w 4 M1 XR
94.8477 134.333 m
96.8076 134.333 97.9854 132.3584 97.9854 129.8618 c
97.9854 127.3647 96.584 125.5649 94.9033 125.5649 c
93.2217 125.5649 91.709 127.5396 91.709 129.9771 c
91.709 132.416 91.709 127.5396 91.709 129.9771 c
91.709 132.6484 92.8867 134.333 94.8477 134.333 C
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
94.8477 134.333 m
96.8076 134.333 97.9854 132.3584 97.9854 129.8618 c
97.9854 127.3647 96.584 125.5649 94.9033 125.5649 c
93.2217 125.5649 91.709 127.5396 91.709 129.9771 c
91.709 132.416 91.709 127.5396 91.709 129.9771 c
91.709 132.6484 92.8867 134.333 94.8477 134.333 c
s0 O
0 0 0 0 k
1 w 4 M1 XR
60.1826 52.043 m
49.6997 52.0449 L
49.6997 36.1982 L
60.4209 36.1982 L
60.3813 37.9629 L
51.3218 37.9629 L
51.3271 43.832 L
59.5894 43.8252 L
59.5894 45.2197 L
51.2822 45.2197 L
51.2822 50.5088 L
60.1826 50.5088 L
60.1826 52.043 L
F0 R
0 0 0 0 K
0.1 w 11.5 M0 XR
60.1826 52.043 m
49.6997 52.0449 L
49.6997 36.1982 L
60.4209 36.1982 L
60.3813 37.9629 L
51.3218 37.9629 L
51.3271 43.832 L
59.5894 43.8252 L
59.5894 45.2197 L
51.2822 45.2197 L
51.2822 50.5088 L
60.1826 50.5088 L
60.1826 52.043 L
s0 O
0 0 0 0 k
1 w 4 M1 XR
75.0576 48.0859 m
75.0439 49.3545 74.0684 52.6006 69.4014 52.6006 c
64.9297 52.6006 64.1006 50.0156 64.1006 48.6221 c
64.1006 45.917 67.3818 44.7734 69.3623 44.2764 c
72.3408 43.5293 74.3467 43.1689 74.3467 40.9131 c
74.3467 39.4395 73.2383 37.5518 70.4307 37.5518 c
65.4834 37.5518 65.1289 41.6221 Y
64.4141 41.6162 63.7041 41.6104 V
63.7041 39.21 66.3438 36.2949 70.3691 36.2949 c
73.2461 36.2949 75.7715 38.3721 75.7715 40.791 c
75.7715 43.9063 72.5557 44.6797 70.6279 45.3008 c
68.6992 45.9238 65.4834 46.7773 65.4834 48.6221 c
65.4834 50.0566 66.667 51.3691 69.4014 51.3691 c
73.6836 51.3691 73.6348 48.0898 Y
74.3428 48.0879 75.0576 48.0859 V
F0 R
0 0 0 0 K
0.1 w 11.5 M0 XR
75.0576 48.0859 m
75.0439 49.3545 74.0684 52.6006 69.4014 52.6006 c
64.9297 52.6006 64.1006 50.0156 64.1006 48.6221 c
64.1006 45.917 67.3818 44.7734 69.3623 44.2764 c
72.3408 43.5293 74.3467 43.1689 74.3467 40.9131 c
74.3467 39.4395 73.2383 37.5518 70.4307 37.5518 c
65.4834 37.5518 65.1289 41.6221 Y
64.4141 41.6162 63.7041 41.6104 V
63.7041 39.21 66.3438 36.2949 70.3691 36.2949 c
73.2461 36.2949 75.7715 38.3721 75.7715 40.791 c
75.7715 43.9063 72.5557 44.6797 70.6279 45.3008 c
68.6992 45.9238 65.4834 46.7773 65.4834 48.6221 c
65.4834 50.0566 66.667 51.3691 69.4014 51.3691 c
73.6836 51.3691 73.6348 48.0898 Y
74.3428 48.0879 75.0576 48.0859 V
s0 O
0 0 0 1 k
1 w 4 M1 XR
87.2861 24.9785 m
89.1934 24.9785 90.3799 23.5879 90.3799 21.7744 c
90.3799 19.96 89.2705 18.3281 87.2861 18.3281 c
85.3037 18.3281 84.1357 19.8594 84.1357 21.5127 c
84.1357 23.165 85.3809 24.9785 87.2861 24.9785 C
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
87.2861 24.9785 m
89.1934 24.9785 90.3799 23.5879 90.3799 21.7744 c
90.3799 19.96 89.2705 18.3281 87.2861 18.3281 c
85.3037 18.3281 84.1357 19.8594 84.1357 21.5127 c
84.1357 23.165 85.3809 24.9785 87.2861 24.9785 c
s0 O
0 0 0 0 k
1 w 4 M1 XR
87.3418 24.3311 m
88.96 24.3311 89.8418 23.0469 89.8418 21.6094 c
89.8418 20.1719 88.792 18.8428 87.2793 18.8428 c
85.7646 18.8428 84.7988 19.8447 84.7988 21.4365 c
84.7988 23.0264 85.7236 24.3311 87.3418 24.3311 C
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
87.3418 24.3311 m
88.96 24.3311 89.8418 23.0469 89.8418 21.6094 c
89.8418 20.1719 88.792 18.8428 87.2793 18.8428 c
85.7646 18.8428 84.7988 19.8447 84.7988 21.4365 c
84.7988 23.0264 85.7236 24.3311 87.3418 24.3311 c
s0 O
0 0 0 1 k
1 w 4 M1 XR
86.082 23.125 m
86.082 20.1016 L
86.6377 20.1016 L
86.6377 21.2598 L
87.0742 21.2598 L
88.1514 20.1016 L
88.6289 20.1016 L
88.6377 20.5547 L
87.9668 21.25 L
88.5693 21.6934 88.5693 21.9551 V
88.6084 22.4053 88.5996 22.5039 88.4922 22.7412 c
88.3564 23.0449 88.2002 23.125 87.8896 23.125 c
86.8789 23.125 86.082 23.125 Y
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
86.082 23.125 m
86.082 20.1016 L
86.6377 20.1016 L
86.6377 21.2598 L
87.0742 21.2598 L
88.1514 20.1016 L
88.6289 20.1016 L
88.6377 20.5547 L
87.9668 21.25 L
88.5693 21.6934 88.5693 21.9551 V
88.6084 22.4053 88.5996 22.5039 88.4922 22.7412 c
88.3564 23.0449 88.2002 23.125 87.8896 23.125 c
86.8789 23.125 86.082 23.125 Y
s0 O
0 0 0 0 k
1 w 4 M1 XR
86.5293 22.6602 m
86.5293 21.7803 L
87.1709 21.7803 87.7881 21.7803 v
88.1064 21.7803 88.1699 22.1777 Y
88.1699 22.3604 88.0586 22.6563 87.6787 22.6563 c
87.1162 22.6563 86.5293 22.6602 Y
F0 R
0 0 0 1 K
0.1 w 11.5 M0 XR
86.5293 22.6602 m
86.5293 21.7803 L
87.1709 21.7803 87.7881 21.7803 v
88.1064 21.7803 88.1699 22.1777 Y
88.1699 22.3604 88.0586 22.6563 87.6787 22.6563 c
87.1162 22.6563 86.5293 22.6602 Y
sLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
